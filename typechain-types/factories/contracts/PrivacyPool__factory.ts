/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PrivacyPool,
  PrivacyPoolInterface,
} from "../../contracts/PrivacyPool";

const _abi = [
  {
    inputs: [],
    name: "InvalidOrRedeemedNote",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRecipientAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoteAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "secretHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NoteGenerated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "secretHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NoteRedeemed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_secretHash",
        type: "bytes32",
      },
    ],
    name: "generatePrivacyNote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "privacyNotes",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_secretHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "redeemNote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506108db806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631bac3d5014610046578063343cc5fa14610062578063c3b0ecbf1461007e575b600080fd5b610060600480360381019061005b91906106fb565b6100af565b005b61007c60048036038101906100779190610771565b610271565b005b610098600480360381019061009391906107c4565b61047b565b6040516100a692919061080f565b60405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610115576040517f44d99fea00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000848152602001908152602001600020905060008160010154905060008260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008214806101985750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b156101cf576040517f8abb7e2300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000836001018190555061020484838373ffffffffffffffffffffffffffffffffffffffff166104bf9092919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16867f1d37ceadfee499e4d2c899743f1368917c2d91986bf31da1431fa44150331a21856040516102629190610838565b60405180910390a45050505050565b600082036102ab576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000838152602001908152602001600020600101541415806103325750600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610369576040517f0d916eb800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103963330848673ffffffffffffffffffffffffffffffffffffffff1661053e909392919063ffffffff16565b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381525060008083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050508273ffffffffffffffffffffffffffffffffffffffff16817f3bd2f8803f4061cc980d1fe054c80c3579e5d81b27a97de28b4f2e05fd76d6278460405161046e9190610838565b60405180910390a3505050565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b610539838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016104f292919061080f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105c0565b505050565b6105ba848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161057393929190610853565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105c0565b50505050565b600080602060008451602086016000885af1806105e3576040513d6000823e3d81fd5b3d9250600051915050600082146105fe57600181141561061a565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b1561065c57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610653919061088a565b60405180910390fd5b50505050565b600080fd5b6000819050919050565b61067a81610667565b811461068557600080fd5b50565b60008135905061069781610671565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106c88261069d565b9050919050565b6106d8816106bd565b81146106e357600080fd5b50565b6000813590506106f5816106cf565b92915050565b6000806040838503121561071257610711610662565b5b600061072085828601610688565b9250506020610731858286016106e6565b9150509250929050565b6000819050919050565b61074e8161073b565b811461075957600080fd5b50565b60008135905061076b81610745565b92915050565b60008060006060848603121561078a57610789610662565b5b6000610798868287016106e6565b93505060206107a98682870161075c565b92505060406107ba86828701610688565b9150509250925092565b6000602082840312156107da576107d9610662565b5b60006107e884828501610688565b91505092915050565b6107fa816106bd565b82525050565b6108098161073b565b82525050565b600060408201905061082460008301856107f1565b6108316020830184610800565b9392505050565b600060208201905061084d6000830184610800565b92915050565b600060608201905061086860008301866107f1565b61087560208301856107f1565b6108826040830184610800565b949350505050565b600060208201905061089f60008301846107f1565b9291505056fea2646970667358221220c235b23dd83ba3defd843dc77a60c1a1e083d062d766cd124603a7f31a83919b64736f6c63430008140033";

type PrivacyPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivacyPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivacyPool__factory extends ContractFactory {
  constructor(...args: PrivacyPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PrivacyPool> {
    return super.deploy(overrides || {}) as Promise<PrivacyPool>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PrivacyPool {
    return super.attach(address) as PrivacyPool;
  }
  override connect(signer: Signer): PrivacyPool__factory {
    return super.connect(signer) as PrivacyPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivacyPoolInterface {
    return new utils.Interface(_abi) as PrivacyPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivacyPool {
    return new Contract(address, _abi, signerOrProvider) as PrivacyPool;
  }
}
